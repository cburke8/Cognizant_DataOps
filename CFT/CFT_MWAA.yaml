Description:  This template deploys a VPC, with a pair of public and private subnets spread across two Availability Zones. It deploys an internet gateway, with a default route on the public subnets. It deploys a pair of NAT gateways (one in each AZ), and default routes for them in the private subnets.


Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: AirflowQAEnvironment

  ReqPath:
    Description: Requirements file location in relation to Airflow bucket
    Type: String
    Default: Requirements.txt

  SourceBucket:
    Description: Source bucket of environment
    Type: String
    Default: "arn:aws:s3:::airflow-citibike-qa"

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.192.0.0/16

  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.192.10.0/24

  PublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 10.192.11.0/24

  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.192.20.0/24

  PrivateSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 10.192.21.0/24



  ZipFileName:
    Description: Please enter name of the S3 bucket that the request module is in
    Type: String
    Default: lambda_layer_requests.zip

  bronze:
    Description: Please enter the name of the bronze bucket in the previous template
    Type: String
    Default: citibike-qa-bronze
  silver:
    Description: Please enter the name of the silver bucket in the previous template
    Type: String
    Default: citibike-qa-silver
  gold:
    Description: Please enter the name of the gold bucket in the previous template
    Type: String
    Default: citibike-qa-gold

  Username:
    Description: Default username of Redshift admin
    Type: String
    Default: awsuser
  Password:
    Description: Default password of Redshift admin
    Type: String
    Default: AWSuser123
  SecurityGroupRedshift:
    Description: Enter security group ID associated with the Redshift Cluster
    Type: String
  PublicSubnetRedshift:
    Description: Enter public subnet associated with the Redshift Cluster
    Type: String
  JDBC:
    Description: Enter the JDBC connection associated with the Redshift Cluster
    Type: String
  GlueS3Connection:
    Description: Name of the S3 connector created in the first CFT
    Type: String
    Default: S3Connector
  GlueDBName:
    Description: Name of the Glue Database created in the first CFT
    Type: String
    Default: cognizant_glue_db_citi_bike

#    Fn::ImportValue: !Sub '${DataOps-CFT-1}-redshiftJDBC'
#    Fn::ImportValue: !Sub '${DataOps-CFT-1}-redshiftSG'
#    Fn::ImportValue: !Sub '${DataOps-CFT-1}-redshiftSubnet'

Resources:
  GlueRedshiftConnection:
    Type: AWS::Glue::Connection
    Properties:
      CatalogId: !Ref 'AWS::AccountId'
      ConnectionInput:
        ConnectionProperties: {
          "USERNAME": !Ref  Password,
          "PASSWORD": !Ref Username,
          "JDBC_CONNECTION_URL": !Ref JDBC
        }
        ConnectionType: JDBC
        Description: Glue Connection to redshift cluster
        Name: RedshiftConnector
        PhysicalConnectionRequirements:
           AvailabilityZone: us-east-2a
           SecurityGroupIdList:
             - !Ref SecurityGroupRedshift
           SubnetId: !Ref PublicSubnetRedshift

  CrawlerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - glue.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'
  CrawlerBronze:
    Type: 'AWS::Glue::Crawler'
    Properties:
      Name: Bronze-Crawler
      Role: !Ref CrawlerRole
      DatabaseName: !Ref GlueDBName
      Targets:
        S3Targets:
          - ConnectionName: !Ref GlueS3Connection
          - Path: !Sub arn:aws:s3:::${bronze}
  CrawlerSilver:
    Type: 'AWS::Glue::Crawler'
    Properties:
      Name: Silver-Crawler
      Role: !Ref CrawlerRole
      DatabaseName: !Ref GlueDBName
      Targets:
        S3Targets:
          - ConnectionName: !Ref GlueS3Connection
          - Path: !Sub arn:aws:s3:::${silver}
  CrawlerGold:
    Type: 'AWS::Glue::Crawler'
    Properties:
      Name: Gold-Crawler
      Role: !Ref CrawlerRole
      DatabaseName: !Ref GlueDBName
      Targets:
        S3Targets:
          - ConnectionName: !Ref GlueS3Connection
          - Path: !Sub arn:aws:s3:::${gold}


#  S3BronzeNotification:
#    Type: 'AWS::S3::Bucket'
#    Properties:
#      BucketName: !Ref bronze
#      NotificationConfiguration:
#        LambdaConfigurations:
#          - Event: 's3:ObjectCreated:*'
#            Function: !Ref TriggerDag

#  CrawlerRedshift:
#    Type: 'AWS::Glue::Crawler'
#    Properties:
#      Name: Redshift-Crawler
#      Role: !Ref CrawlerRole
#      DatabaseName: !Ref GlueDBName
#      Targets:
#        JdbcTargets:
#          - ConnectionName: !Ref GlueRedshiftConnection
#          - Path: "dev/%/%"




  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MWAAEnvironment

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MWAAEnvironment

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ2)

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2


  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes (AZ1)

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes (AZ2)

  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2

  SecurityGroup:
     Type: AWS::EC2::SecurityGroup
     Properties:
       VpcId: !Ref VPC
       GroupDescription: Security Group for Amazon MWAA Environments to access VPC endpoints
       GroupName: "AirflowQAEnvironment"

  SecurityGroupIngress:
     Type: AWS::EC2::SecurityGroupIngress
     Properties:
       GroupId: !Ref SecurityGroup
       IpProtocol: "-1"
       SourceSecurityGroupId: !Ref SecurityGroup
  MWAAAirflowEnvironment:
    Type: AWS::MWAA::Environment
    Properties:
        AirflowVersion: 1.10.12
        DagS3Path: Dag
        EnvironmentClass: mw1.small
        ExecutionRoleArn: !GetAtt
          - DataOpsAirflowRole
          - Arn
        MaxWorkers: 10
        MinWorkers: 1
        Name: !Ref EnvironmentName
        NetworkConfiguration:
            SecurityGroupIds:
              - !Ref SecurityGroup
            SubnetIds:
              - !Ref PrivateSubnet1
              - !Ref PrivateSubnet2
        RequirementsS3Path: !Ref ReqPath
        SourceBucketArn: !Ref SourceBucket
        WebserverAccessMode: PUBLIC_ONLY



  DataOpsAirflowRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - airflow-env.amazonaws.com
            - airflow.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonS3FullAccess
      - arn:aws:iam::aws:policy/service-role/AWSGlueServiceNotebookRole
      - arn:aws:iam::aws:policy/AmazonAthenaFullAccess
      - arn:aws:iam::aws:policy/AWSLambda_FullAccess
      Path: "/"
      Policies:
      - PolicyName: GluePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - glue:StartJobRun
            Resource:
            - "*"
          - Effect: Allow
            Action:
            - s3:GetObject
            Resource:
            - arn:aws:s3:::crawler-public*
            - arn:aws:s3:::aws-glue*
          - Effect: Allow
            Action:
            - s3:PutObject
            - s3:DeleteObject
            Resource:
            - arn:aws:s3:::aws-glue*
          - Effect: Allow
            Action:
            - ec2:CreateTags
            - ec2:DeleteTags
            Condition:
              ForAllValues:StringEquals:
                aws:TagKeys:
                - aws-glue-service-resource
            Resource:
            - arn:aws:ec2:*:*:network-interface/*
            - arn:aws:ec2:*:*:security-group/*
            - arn:aws:ec2:*:*:instance/*
      - PolicyName: MWAA2
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: airflow:PublishMetrics
            Resource: arn:aws:airflow:*:*:environment/*
          - Effect: Deny
            Action: s3:ListAllMyBuckets
            Resource:
            - arn:aws:s3:::ctsairflow
            - arn:aws:s3:::ctsairflow/*
          - Effect: Allow
            Action:
            - s3:GetObject*
            - s3:GetBucket*
            - s3:List*
            Resource:
            - arn:aws:s3:::ctsairflow
            - arn:aws:s3:::ctsairflow/*
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:CreateLogGroup
            - logs:PutLogEvents
            - logs:GetLogEvents
            - logs:GetLogRecord
            - logs:GetLogGroupFields
            - logs:GetQueryResults
            Resource:
            - arn:aws:logs:*:*:log-group:airflow-*
          - Effect: Allow
            Action:
            - logs:DescribeLogGroups
            Resource:
            - "*"
          - Effect: Allow
            Action:
            - glue:GetJobRun
            Resource:
            - "*"
          - Effect: Allow
            Action: cloudwatch:PutMetricData
            Resource: "*"
          - Effect: Allow
            Action:
            - sqs:ChangeMessageVisibility
            - sqs:DeleteMessage
            - sqs:GetQueueAttributes
            - sqs:GetQueueUrl
            - sqs:ReceiveMessage
            - sqs:SendMessage
            Resource: arn:aws:sqs:*:*:airflow-celery-*
          - Effect: Allow
            Action:
            - kms:Decrypt
            - kms:DescribeKey
            - kms:GenerateDataKey*
            - kms:Encrypt
            NotResource: arn:aws:kms:*:*:key/*
            Condition:
              StringLike:
                kms:ViaService:
                - sqs.*.amazonaws.com
      - PolicyName: MWAAPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action: airflow:ListEnvironments
            Resource: "*"
          - Sid: VisualEditor1
            Effect: Allow
            Action: airflow:*
            Resource:
            - arn:aws:airflow:*:*:role/*/*
            - arn:aws:airflow:*:*:environment/*

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]

  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]

  PublicSubnet1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet1

  PublicSubnet2:
    Description: A reference to the public subnet in the 2nd Availability Zone
    Value: !Ref PublicSubnet2

  PrivateSubnet1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnet1

  PrivateSubnet2:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnet2

  SecurityGroup:
    Description: Security group with no ingress rule
    Value: !Ref SecurityGroup
